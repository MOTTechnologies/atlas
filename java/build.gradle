import edu.sc.seis.launch4j.tasks.Launch4jLibraryTask
import io.github.fvarrui.javapackager.gradle.PackageTask

buildscript {
    repositories {
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }
    dependencies {
        classpath 'io.github.fvarrui:javapackager:1.7.5'
    }
}

plugins {
    id 'java'
    id 'de.undercouch.download' version '5.6.0'
}

apply plugin: 'io.github.fvarrui.javapackager.plugin'


sourceCompatibility = 21
targetCompatibility = 21

group = "com.github.manevolent"
version = "2024.2.0"

project.ext.mainClass = 'com.github.manevolent.atlas.ui.Atlas'
project.ext.ikonliVersion = '12.3.1'

repositories {
    mavenCentral()
    maven {
        url "https://jogamp.org/deployment/maven/"
    }
}

test {
    jvmArgs(['--enable-preview'])
    useJUnitPlatform()
}

javapackager {
    mainClass = project.ext.mainClass
    bundleJre = true
    administratorRequired = false
    customizedJre = false
}

processResources {
    filesMatching('application.properties') {
        expand([
                name: project.name,
                version: project.version
        ])
    }
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.0"
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    implementation "org.kordamp.ikonli:ikonli-swing:${project.ext.ikonliVersion}"
    implementation "org.kordamp.ikonli:ikonli-fontawesome5-pack:${project.ext.ikonliVersion}"
    implementation "org.kordamp.ikonli:ikonli-carbonicons-pack:${project.ext.ikonliVersion}"

    implementation "net.codecrete.usb:java-does-usb:0.7.1"
    implementation 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
    implementation "org.yaml:snakeyaml:2.2"
    implementation "com.formdev:flatlaf:3.4"
    implementation "commons-lang:commons-lang:2.6"
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.12.0'
    implementation "com.google.code.gson:gson:2.10.1"
    implementation "com.google.guava:guava:33.0.0-jre"
    implementation "net.java.dev.jna:jna:5.14.0"
    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.11.5'

    implementation 'org.jogamp.gluegen:gluegen-rt-main:2.5.0'
    implementation group: 'org.jogamp.jogl', name: 'jogl-all-main', version: '2.5.0'

    implementation group: 'io.joern', name: 'ghidra', version: '11.0_PUBLIC_20231222-2'
}

tasks.register('packageWindows', PackageTask) {
    dependsOn build
    platform = "windows"
    generateInstaller = false

    outputDirectory = file("build/package/windows")
    additionalResources = [file('projects/')]
    createZipball = true
}

tasks.register('packageLinux', PackageTask) {
    dependsOn build
    platform = "linux"
    generateInstaller = true

    linuxConfig {
        generateAppImage = false
    }

    outputDirectory = file("build/package/linux")
    additionalResources = [file('projects/')]
    createTarball = true
}

tasks.register('packageMacOS', PackageTask) {
    dependsOn build
    platform = "mac"

    outputDirectory = file("build/package/macos")
    additionalResources = [file('projects/')]
    createTarball = true
}

tasks.register('packageLinuxAppImage', PackageTask) {
    dependsOn build
    platform = "linux"
    generateInstaller = true

    linuxConfig {
        generateAppImage = true
        generateRpm = false
        generateDeb = false
    }

    outputDirectory = file("build/package/linuxappimage")
    additionalResources = [file('projects/')]
    createTarball = false
}

tasks.register('packageAll') {
    dependsOn packageWindows
    dependsOn packageLinux
    dependsOn packageMacOS
    dependsOn packageLinuxAppImage
}
